{"ast":null,"code":"var _jsxFileName = \"/Users/anthonyg/Desktop/got_quotes/src/components/Content.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport QuoteService from '../services/quote_service.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Content(_ref) {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [character, setCharacter] = useState('');\n  const [quote, setQuote] = useState({});\n  const [error, setError] = useState(false);\n  const [random, setRandom] = useState(false);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    if (character) {\n      setLoading(true);\n      QuoteService.quoteByChar(character).then(res => {\n        setQuote(res);\n      }).then(() => {\n        setLoading(false);\n      }).catch(err => {\n        setError(true);\n        console.log(err);\n      });\n    }\n  }, [character]);\n  useEffect(() => {\n    if (random) {\n      setLoading(true);\n      QuoteService.randomQuote().then(res => {\n        setQuote(res);\n        setCharacter(res.data.quoter_key);\n      }).then(() => {\n        setLoading(false);\n        setRandom(false);\n      }).catch(err => {\n        setError(true);\n        console.log(err);\n      });\n    }\n  }, [random]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-screen h-5/6 grid content-between bg-[#FCF5E5] pt-3 px-5\",\n    children: [/*#__PURE__*/React.cloneElement(children[0], {\n      loading: loading,\n      setLoading: setLoading,\n      quote: quote,\n      error: error,\n      setRandom: setRandom\n    }), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"bg-yellow-300 hover:bg-yellow-200 border-b-4 border-yellow-500 hover:border-yellow-400 text-black p-2 w-60 h-min justify-self-center mt-2 rounded\",\n      onClick: () => setRandom(true),\n      children: \" Random Quote \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/React.cloneElement(children[1], {\n      setCharacter: setCharacter,\n      selected: character\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Content, \"f7trCnZVCWWaegvM/zZYqJBT3cU=\");\n\n_c = Content;\n\nvar _c;\n\n$RefreshReg$(_c, \"Content\");","map":{"version":3,"sources":["/Users/anthonyg/Desktop/got_quotes/src/components/Content.js"],"names":["React","useState","useEffect","QuoteService","Content","children","character","setCharacter","quote","setQuote","error","setError","random","setRandom","loading","setLoading","quoteByChar","then","res","catch","err","console","log","randomQuote","data","quoter_key","cloneElement","selected"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,YAAP,MAAyB,8BAAzB;;AAEA,eAAe,SAASC,OAAT,OAA6B;AAAA;;AAAA,MAAZ;AAACC,IAAAA;AAAD,GAAY;AAC1C,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM,CAACW,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACa,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC,KAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAI;AACZ,QAAGI,SAAH,EAAa;AACXS,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAZ,MAAAA,YAAY,CAACa,WAAb,CAAyBV,SAAzB,EAAoCW,IAApC,CAA0CC,GAAD,IAAS;AAChDT,QAAAA,QAAQ,CAACS,GAAD,CAAR;AACD,OAFD,EAEGD,IAFH,CAEQ,MAAI;AACVF,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD,OAJD,EAIGI,KAJH,CAIUC,GAAD,IAAO;AACdT,QAAAA,QAAQ,CAAC,IAAD,CAAR;AACAU,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,OAPD;AAQD;AACF,GAZQ,EAYP,CAACd,SAAD,CAZO,CAAT;AAcAJ,EAAAA,SAAS,CAAC,MAAI;AACZ,QAAGU,MAAH,EAAU;AACRG,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAZ,MAAAA,YAAY,CAACoB,WAAb,GAA2BN,IAA3B,CAAiCC,GAAD,IAAS;AACvCT,QAAAA,QAAQ,CAACS,GAAD,CAAR;AACAX,QAAAA,YAAY,CAACW,GAAG,CAACM,IAAJ,CAASC,UAAV,CAAZ;AACD,OAHD,EAGGR,IAHH,CAGQ,MAAI;AACVF,QAAAA,UAAU,CAAC,KAAD,CAAV;AACAF,QAAAA,SAAS,CAAC,KAAD,CAAT;AACD,OAND,EAMGM,KANH,CAMUC,GAAD,IAAO;AACdT,QAAAA,QAAQ,CAAC,IAAD,CAAR;AACAU,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,OATD;AAUD;AACF,GAdQ,EAcP,CAACR,MAAD,CAdO,CAAT;AAgBA,sBACE;AAAK,IAAA,SAAS,EAAC,4DAAf;AAAA,4BACGZ,KAAK,CAAC0B,YAAN,CAAmBrB,QAAQ,CAAC,CAAD,CAA3B,EAAgC;AAACS,MAAAA,OAAO,EAACA,OAAT;AAAkBC,MAAAA,UAAU,EAACA,UAA7B;AAAyCP,MAAAA,KAAK,EAACA,KAA/C;AAAsDE,MAAAA,KAAK,EAACA,KAA5D;AAAmEG,MAAAA,SAAS,EAACA;AAA7E,KAAhC,CADH,eAEE;AAAQ,MAAA,SAAS,EAAC,mJAAlB;AAAsK,MAAA,OAAO,EAAE,MAAMA,SAAS,CAAC,IAAD,CAA9L;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGGb,KAAK,CAAC0B,YAAN,CAAmBrB,QAAQ,CAAC,CAAD,CAA3B,EAAgC;AAACE,MAAAA,YAAY,EAAEA,YAAf;AAA6BoB,MAAAA,QAAQ,EAAErB;AAAvC,KAAhC,CAHH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GA5CuBF,O;;KAAAA,O","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport QuoteService from '../services/quote_service.js';\n\nexport default function Content({children}) {\n  const [character, setCharacter] = useState('');\n  const [quote, setQuote] = useState({});\n  const [error, setError] = useState(false);\n  const [random, setRandom] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(()=>{\n    if(character){\n      setLoading(true);\n      QuoteService.quoteByChar(character).then((res) => {\n        setQuote(res)\n      }).then(()=>{\n        setLoading(false)\n      }).catch((err)=>{\n        setError(true)\n        console.log(err)\n      })\n    }\n  },[character])\n\n  useEffect(()=>{\n    if(random){\n      setLoading(true);\n      QuoteService.randomQuote().then((res) => {\n        setQuote(res)\n        setCharacter(res.data.quoter_key)\n      }).then(()=>{\n        setLoading(false)\n        setRandom(false)\n      }).catch((err)=>{\n        setError(true)\n        console.log(err)\n      })\n    }\n  },[random])\n\n  return (\n    <div className='w-screen h-5/6 grid content-between bg-[#FCF5E5] pt-3 px-5'>\n      {React.cloneElement(children[0], {loading:loading, setLoading:setLoading, quote:quote, error:error, setRandom:setRandom})}\n      <button className='bg-yellow-300 hover:bg-yellow-200 border-b-4 border-yellow-500 hover:border-yellow-400 text-black p-2 w-60 h-min justify-self-center mt-2 rounded' onClick={() => setRandom(true)}> Random Quote </button>\n      {React.cloneElement(children[1], {setCharacter: setCharacter, selected: character})}\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}