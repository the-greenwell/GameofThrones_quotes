{"ast":null,"code":"var _jsxFileName = \"/Users/anthonyg/Desktop/got_quotes/src/components/Content.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Quotes from './Quotes.js';\nimport Characters from './Characters.js';\nimport QuoteService from '../services/quote_service.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Content() {\n  _s();\n\n  const [character, setCharacter] = useState('');\n  const [quote, setQuote] = useState({});\n  const [err, setError] = useState(false);\n  const [random, setRandom] = useState(true);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    if (character.target) {\n      setLoading(true);\n      QuoteService.quoteByChar(character.target.id).then(res => {\n        setQuote(res);\n      }).then(() => {\n        setLoading(false);\n      }).catch(err => {\n        setError(true);\n      });\n    }\n  }, [character]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-screen h-96 grid content-between\",\n    children: [/*#__PURE__*/_jsxDEV(Quotes, {\n      loading: loading,\n      setLoading: setLoading,\n      quote: quote,\n      error: err\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Characters, {\n      setCharacter: setCharacter,\n      selected: character\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Content, \"00rJOmG9GETNT20BauUNx0OgeNQ=\");\n\n_c = Content;\n\nvar _c;\n\n$RefreshReg$(_c, \"Content\");","map":{"version":3,"sources":["/Users/anthonyg/Desktop/got_quotes/src/components/Content.js"],"names":["React","useState","useEffect","Quotes","Characters","QuoteService","Content","character","setCharacter","quote","setQuote","err","setError","random","setRandom","loading","setLoading","target","quoteByChar","id","then","res","catch"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,UAAP,MAAuB,iBAAvB;AACA,OAAOC,YAAP,MAAyB,8BAAzB;;AAEA,eAAe,SAASC,OAAT,GAAmB;AAAA;;AAChC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACU,GAAD,EAAMC,QAAN,IAAkBX,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM,CAACY,MAAD,EAASC,SAAT,IAAsBb,QAAQ,CAAC,IAAD,CAApC;AACA,QAAM,CAACc,OAAD,EAAUC,UAAV,IAAwBf,QAAQ,CAAC,KAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAI;AACZ,QAAGK,SAAS,CAACU,MAAb,EAAoB;AAClBD,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAX,MAAAA,YAAY,CAACa,WAAb,CAAyBX,SAAS,CAACU,MAAV,CAAiBE,EAA1C,EAA8CC,IAA9C,CAAoDC,GAAD,IAAS;AAC1DX,QAAAA,QAAQ,CAACW,GAAD,CAAR;AACD,OAFD,EAEGD,IAFH,CAEQ,MAAI;AACVJ,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD,OAJD,EAIGM,KAJH,CAIUX,GAAD,IAAO;AACdC,QAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,OAND;AAOD;AACF,GAXQ,EAWP,CAACL,SAAD,CAXO,CAAT;AAaA,sBACE;AAAK,IAAA,SAAS,EAAC,oCAAf;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEQ,OAAjB;AAA0B,MAAA,UAAU,EAAEC,UAAtC;AAAkD,MAAA,KAAK,EAAEP,KAAzD;AAAgE,MAAA,KAAK,EAAEE;AAAvE;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,UAAD;AAAY,MAAA,YAAY,EAAEH,YAA1B;AAAwC,MAAA,QAAQ,EAAED;AAAlD;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GA1BuBD,O;;KAAAA,O","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Quotes from './Quotes.js';\nimport Characters from './Characters.js';\nimport QuoteService from '../services/quote_service.js';\n\nexport default function Content() {\n  const [character, setCharacter] = useState('');\n  const [quote, setQuote] = useState({});\n  const [err, setError] = useState(false);\n  const [random, setRandom] = useState(true);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(()=>{\n    if(character.target){\n      setLoading(true);\n      QuoteService.quoteByChar(character.target.id).then((res) => {\n        setQuote(res)\n      }).then(()=>{\n        setLoading(false)\n      }).catch((err)=>{\n        setError(true)\n      })\n    }\n  },[character])\n\n  return (\n    <div className='w-screen h-96 grid content-between'>\n      <Quotes loading={loading} setLoading={setLoading} quote={quote} error={err}/>\n      <Characters setCharacter={setCharacter} selected={character}/>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}