{"ast":null,"code":"var _jsxFileName = \"/Users/anthonyg/Desktop/got_quotes/src/components/Quotes.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Quote = _ref => {\n  _s();\n\n  let {\n    props\n  } = _ref;\n  useEffect(() => {}, [props]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-4xl text-black font-bold\",\n      children: [\"\\\"\", props.quote, \"\\\"\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-xl text-right font-bold right-10 top-5 md:right-40 relative\",\n      children: [\"- \", props.quoter]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Quote, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Quote;\nexport default function Quotes(_ref2) {\n  let {\n    quote,\n    loading,\n    error,\n    setRandom\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-[100%] bg-cover h-fit lg:h-96 grid justify-center content-center p-10 quote-border justify-self-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"bg-yellow-300 hover:bg-yellow-200 border-b-4 border-yellow-500 hover:border-yellow-400 text-black p-2 w-40 h-min justify-self-center self-start mt-2 rounded\",\n      onClick: () => setRandom(true),\n      children: \" Random Quote \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-4xl text-black font-bold\",\n      children: \"Please try again tomorrow\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 10\n    }, this) : loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-4xl text-black font-bold\",\n      children: \"...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 12\n    }, this) : quote && quote.data ? /*#__PURE__*/_jsxDEV(Quote, {\n      props: quote.data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 36\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-4xl text-black font-bold\",\n      children: \" Select a character below \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 67\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n_c2 = Quotes;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Quote\");\n$RefreshReg$(_c2, \"Quotes\");","map":{"version":3,"sources":["/Users/anthonyg/Desktop/got_quotes/src/components/Quotes.js"],"names":["React","useState","useEffect","Quote","props","quote","quoter","Quotes","loading","error","setRandom","data"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;AAEA,MAAMC,KAAK,GAAG,QAAa;AAAA;;AAAA,MAAZ;AAACC,IAAAA;AAAD,GAAY;AACzBF,EAAAA,SAAS,CAAC,MAAM,CACf,CADQ,EACP,CAACE,KAAD,CADO,CAAT;AAEA,sBACE;AAAA,4BACE;AAAG,MAAA,SAAS,EAAC,+BAAb;AAAA,uBAA+CA,KAAK,CAACC,KAArD;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAG,MAAA,SAAS,EAAC,kEAAb;AAAA,uBAAmFD,KAAK,CAACE,MAAzF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAMD,CATD;;GAAMH,K;;KAAAA,K;AAWN,eAAe,SAASI,MAAT,QAAoD;AAAA,MAApC;AAACF,IAAAA,KAAD;AAAQG,IAAAA,OAAR;AAAiBC,IAAAA,KAAjB;AAAwBC,IAAAA;AAAxB,GAAoC;AACjE,sBACE;AAAK,IAAA,SAAS,EAAC,0GAAf;AAAA,4BACE;AAAQ,MAAA,SAAS,EAAC,8JAAlB;AAAiL,MAAA,OAAO,EAAE,MAAMA,SAAS,CAAC,IAAD,CAAzM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAGED,KAAK,gBACF;AAAG,MAAA,SAAS,EAAC,+BAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADE,GAGFD,OAAO,gBACL;AAAG,MAAA,SAAS,EAAC,+BAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADK,GAGHH,KAAK,IAAIA,KAAK,CAACM,IAAf,gBAAsB,QAAC,KAAD;AAAO,MAAA,KAAK,EAAEN,KAAK,CAACM;AAApB;AAAA;AAAA;AAAA;AAAA,YAAtB,gBAAqD;AAAG,MAAA,SAAS,EAAC,+BAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAT9D;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;MAhBuBJ,M","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst Quote = ({props}) => {\n  useEffect(() => {\n  },[props])\n  return (\n    <>\n      <p className='text-4xl text-black font-bold'>\"{props.quote}\"</p>\n      <p className='text-xl text-right font-bold right-10 top-5 md:right-40 relative'>- {props.quoter}</p>\n    </>\n  )\n}\n\nexport default function Quotes({quote, loading, error, setRandom}) {\n  return (\n    <div className='w-[100%] bg-cover h-fit lg:h-96 grid justify-center content-center p-10 quote-border justify-self-center'>\n      <button className='bg-yellow-300 hover:bg-yellow-200 border-b-4 border-yellow-500 hover:border-yellow-400 text-black p-2 w-40 h-min justify-self-center self-start mt-2 rounded' onClick={() => setRandom(true)}> Random Quote </button>\n    {\n      error ?\n        (<p className='text-4xl text-black font-bold'>Please try again tomorrow</p>)\n        :\n        (loading ?\n          (<p className='text-4xl text-black font-bold'>...</p>)\n            :\n            (quote && quote.data ? <Quote props={quote.data} /> : <p className='text-4xl text-black font-bold'> Select a character below </p>)\n          )\n    }\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}