{"ast":null,"code":"var _jsxFileName = \"/Users/anthonyg/Desktop/got_quotes/src/components/Content.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Quotes from './Quotes.js';\nimport Characters from './Characters.js';\nimport QuoteService from '../services/quote_service.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Content(_ref) {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [character, setCharacter] = useState('');\n  const [quote, setQuote] = useState({});\n  const [error, setError] = useState(false);\n  const [random, setRandom] = useState(false);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    console.log(children);\n\n    if (character) {\n      setLoading(true);\n      QuoteService.quoteByChar(character).then(res => {\n        setQuote(res);\n      }).then(() => {\n        setLoading(false);\n      }).catch(err => {\n        setError(true);\n        console.log(err);\n      });\n    }\n  }, [character]);\n  useEffect(() => {\n    if (random) {\n      setLoading(true);\n      QuoteService.randomQuote().then(res => {\n        setQuote(res);\n        setCharacter(res.data.quoter_key);\n      }).then(() => {\n        setLoading(false);\n        setRandom(false);\n      }).catch(err => {\n        setError(true);\n        console.log(err);\n      });\n    }\n  }, [random]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-screen h-5/6 grid content-between bg-[#FCF5E5] pt-3 px-5\",\n    children: [/*#__PURE__*/_jsxDEV(Quotes, {\n      loading: loading,\n      setLoading: setLoading,\n      quote: quote,\n      error: error,\n      setRandom: setRandom\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"bg-yellow-300 hover:bg-yellow-200 border-b-4 border-yellow-500 hover:border-yellow-400 text-black p-2 w-60 h-min justify-self-center mt-2 rounded\",\n      onClick: () => setRandom(true),\n      children: \" Random Quote \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Characters, {\n      setCharacter: setCharacter,\n      selected: character\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Content, \"f7trCnZVCWWaegvM/zZYqJBT3cU=\");\n\n_c = Content;\n\nvar _c;\n\n$RefreshReg$(_c, \"Content\");","map":{"version":3,"sources":["/Users/anthonyg/Desktop/got_quotes/src/components/Content.js"],"names":["React","useState","useEffect","Quotes","Characters","QuoteService","Content","children","character","setCharacter","quote","setQuote","error","setError","random","setRandom","loading","setLoading","console","log","quoteByChar","then","res","catch","err","randomQuote","data","quoter_key"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,UAAP,MAAuB,iBAAvB;AACA,OAAOC,YAAP,MAAyB,8BAAzB;;AAEA,eAAe,SAASC,OAAT,OAA6B;AAAA;;AAAA,MAAZ;AAACC,IAAAA;AAAD,GAAY;AAC1C,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM,CAACa,MAAD,EAASC,SAAT,IAAsBd,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACe,OAAD,EAAUC,UAAV,IAAwBhB,QAAQ,CAAC,KAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAI;AACZgB,IAAAA,OAAO,CAACC,GAAR,CAAYZ,QAAZ;;AACA,QAAGC,SAAH,EAAa;AACXS,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAZ,MAAAA,YAAY,CAACe,WAAb,CAAyBZ,SAAzB,EAAoCa,IAApC,CAA0CC,GAAD,IAAS;AAChDX,QAAAA,QAAQ,CAACW,GAAD,CAAR;AACD,OAFD,EAEGD,IAFH,CAEQ,MAAI;AACVJ,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD,OAJD,EAIGM,KAJH,CAIUC,GAAD,IAAO;AACdX,QAAAA,QAAQ,CAAC,IAAD,CAAR;AACAK,QAAAA,OAAO,CAACC,GAAR,CAAYK,GAAZ;AACD,OAPD;AAQD;AACF,GAbQ,EAaP,CAAChB,SAAD,CAbO,CAAT;AAeAN,EAAAA,SAAS,CAAC,MAAI;AACZ,QAAGY,MAAH,EAAU;AACRG,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAZ,MAAAA,YAAY,CAACoB,WAAb,GAA2BJ,IAA3B,CAAiCC,GAAD,IAAS;AACvCX,QAAAA,QAAQ,CAACW,GAAD,CAAR;AACAb,QAAAA,YAAY,CAACa,GAAG,CAACI,IAAJ,CAASC,UAAV,CAAZ;AACD,OAHD,EAGGN,IAHH,CAGQ,MAAI;AACVJ,QAAAA,UAAU,CAAC,KAAD,CAAV;AACAF,QAAAA,SAAS,CAAC,KAAD,CAAT;AACD,OAND,EAMGQ,KANH,CAMUC,GAAD,IAAO;AACdX,QAAAA,QAAQ,CAAC,IAAD,CAAR;AACAK,QAAAA,OAAO,CAACC,GAAR,CAAYK,GAAZ;AACD,OATD;AAUD;AACF,GAdQ,EAcP,CAACV,MAAD,CAdO,CAAT;AAgBA,sBACE;AAAK,IAAA,SAAS,EAAC,4DAAf;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEE,OAAjB;AAA0B,MAAA,UAAU,EAAEC,UAAtC;AAAkD,MAAA,KAAK,EAAEP,KAAzD;AAAgE,MAAA,KAAK,EAAEE,KAAvE;AAA8E,MAAA,SAAS,EAAEG;AAAzF;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,SAAS,EAAC,mJAAlB;AAAsK,MAAA,OAAO,EAAE,MAAMA,SAAS,CAAC,IAAD,CAA9L;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,UAAD;AAAY,MAAA,YAAY,EAAEN,YAA1B;AAAwC,MAAA,QAAQ,EAAED;AAAlD;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GA7CuBF,O;;KAAAA,O","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Quotes from './Quotes.js';\nimport Characters from './Characters.js';\nimport QuoteService from '../services/quote_service.js';\n\nexport default function Content({children}) {\n  const [character, setCharacter] = useState('');\n  const [quote, setQuote] = useState({});\n  const [error, setError] = useState(false);\n  const [random, setRandom] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(()=>{\n    console.log(children)\n    if(character){\n      setLoading(true);\n      QuoteService.quoteByChar(character).then((res) => {\n        setQuote(res)\n      }).then(()=>{\n        setLoading(false)\n      }).catch((err)=>{\n        setError(true)\n        console.log(err)\n      })\n    }\n  },[character])\n\n  useEffect(()=>{\n    if(random){\n      setLoading(true);\n      QuoteService.randomQuote().then((res) => {\n        setQuote(res)\n        setCharacter(res.data.quoter_key)\n      }).then(()=>{\n        setLoading(false)\n        setRandom(false)\n      }).catch((err)=>{\n        setError(true)\n        console.log(err)\n      })\n    }\n  },[random])\n\n  return (\n    <div className='w-screen h-5/6 grid content-between bg-[#FCF5E5] pt-3 px-5'>\n      <Quotes loading={loading} setLoading={setLoading} quote={quote} error={error} setRandom={setRandom}/>\n      <button className='bg-yellow-300 hover:bg-yellow-200 border-b-4 border-yellow-500 hover:border-yellow-400 text-black p-2 w-60 h-min justify-self-center mt-2 rounded' onClick={() => setRandom(true)}> Random Quote </button>\n      <Characters setCharacter={setCharacter} selected={character}/>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}